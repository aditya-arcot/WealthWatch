name: CI/CD Pipeline
on:
    push:
        branches:
            - test
            - main

env:
    VERSION: ${{ github.run_number }}-${{ github.run_attempt }}-${{ github.run_id }}

jobs:
    setup:
        runs-on: mbp-13
        outputs:
            runner: ${{ steps.set-runner.outputs.runner }}
        steps:
            - name: set runner
              id: set-runner
              run: |
                  if [ ${{ github.ref_name }} == 'test' ]; then
                      echo "runner=mbp-14" >> $GITHUB_OUTPUT
                  else
                      echo "runner=mbp-13" >> $GITHUB_OUTPUT
                  fi

    deploy:
        needs: setup
        runs-on: ${{ needs.setup.outputs.runner }}
        environment: ${{ github.ref_name == 'main' && 'prod' || github.ref_name }}
        steps:
            - name: set vars
              run: |
                  echo "REPO=$(echo ${{ github.event.repository.name }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

            - name: test
              run: |
                  echo ${{ env.REPO }}

            # - name: unlock keychain
            #   if: github.ref_name != 'test'
            #   run: security unlock-keychain -p ${{ secrets.KEYCHAIN_PASSWORD }} login.keychain

            # - name: checkout
            #   uses: actions/checkout@v4

            # - name: setup node
            #   uses: actions/setup-node@v4
            #   with:
            #       node-version: 'lts/*'
            #       cache: 'npm'

            # - name: create .env (server)
            #   run: |
            #       cd server/

            #       echo "CLIENT_LOGTAIL_TOKEN=${{ secrets.CLIENT_LOGTAIL_TOKEN }}" >> .env
            #       echo "SERVER_LOGTAIL_TOKEN=${{ secrets.SERVER_LOGTAIL_TOKEN }}" >> .env

            #       echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
            #       echo "SERVER_HOST=${{ secrets.SERVER_HOST }}" >> .env

            #       echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
            #       echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
            #       echo "DB_USER=${{ secrets.DB_USER }}" >> .env
            #       echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

            #       echo "CSRF_SECRET=${{ secrets.CSRF_SECRET }}" >> .env
            #       echo "SESSION_SECRET=${{ secrets.SESSION_SECRET }}" >> .env

            #       echo "PLAID_CLIENT_ID=${{ secrets.PLAID_CLIENT_ID }}" >> .env
            #       echo "PLAID_SECRET=${{ secrets.PLAID_SECRET }}" >> .env
            #       echo "PLAID_WEBHOOK_URL=${{ secrets.PLAID_WEBHOOK_URL }}" >> .env

            #       echo "DOCKER_REGISTRY=${{ secrets.DOCKER_REGISTRY }}" >> .env
            #       echo "KEYCHAIN_PASSWORD=${{ secrets.KEYCHAIN_PASSWORD }}" >> .env

            #       echo "LOG_LEVEL=${{ vars.LOG_LEVEL }}" >> .env

            #       echo "NODE_ENV=${{ vars.NODE_ENV }}" >> .env
            #       echo "PLAID_ENV=${{ vars.PLAID_ENV }}" >> .env

            #       echo "CLIENT_PORT=${{ vars.CLIENT_PORT }}" >> .env
            #       echo "SERVER_PORT=${{ vars.SERVER_PORT }}" >> .env
            #       echo "WEBHOOK_PORT=${{ vars.WEBHOOK_PORT }}" >> .env

            # - name: modify env.test.ts (client)
            #   if: github.ref_name == 'test'
            #   run: |
            #       cd client/src/environments/
            #       sed -e "s/{SERVER_PORT}/${{ vars.SERVER_PORT}}/g" \
            #           -e "s/{SERVER_HOST}/${{ secrets.SERVER_HOST}}/g" \
            #           env.test.ts > env.test.ts.tmp
            #       mv env.test.ts.tmp env.test.ts

            # - name: install, build (server)
            #   run: |
            #       cd server/
            #       npm ci
            #       npm run build

            # - name: install, build (client)
            #   run: |
            #       cd client/
            #       npm ci
            #       if [ "${{ github.ref_name }}" == "main" ]; then
            #         npm run build
            #       else
            #         npm run build:${{ github.ref_name }}
            #       fi

            # - name: copy files (server)
            #   run: |
            #       cd server/
            #       mkdir stage
            #       cp -r .env Dockerfile package.json package-lock.json dist stage/

            # - name: copy files (client)
            #   run: |
            #       cd client/
            #       mkdir stage
            #       cp -r Dockerfile nginx.conf dist stage/

            # - name: build, push docker image (server)
            #   run: |
            #       cd server/stage/
            #       IMAGE=${{ secrets.DOCKER_REGISTRY }}/${{ inputs.server_container }}:${{ inputs.image_tag }}
            #       docker build -t $IMAGE .
            #       docker push $IMAGE
            #       echo "SERVER_IMAGE=${IMAGE}" >> $GITHUB_ENV

            # - name: build, push docker image (client)
            #   run: |
            #       cd client/stage/
            #       IMAGE=${{ secrets.DOCKER_REGISTRY }}/${{ inputs.client_container }}:${{ inputs.image_tag }}
            #       docker build -t $IMAGE .
            #       docker push $IMAGE
            #       echo "CLIENT_IMAGE=${IMAGE}" >> $GITHUB_ENV

    # set-vars:
    #     runs-on: mbp-13
    #     env:
    #         BRANCH_NAME: ${{ github.ref_name }}
    #     steps:
    #         - name: set docker vars
    #           id: vars
    #           run: |
    #               repo_lowercase=$(echo ${{ env.REPO }} | tr '[:upper:]' '[:lower:]')
    #               echo "repo_lowercase=$repo_lowercase" >> $GITHUB_OUTPUT
    #               echo "server_container=${repo_lowercase}-${{ env.BRANCH_NAME }}-server" >> $GITHUB_OUTPUT
    #               echo "client_container=${repo_lowercase}-${{ env.BRANCH_NAME }}-client" >> $GITHUB_OUTPUT
    #               echo "image_tag=$(date +%Y-%m-%d).${{ env.VERSION }}" >> $GITHUB_OUTPUT
    #     outputs:
    #         repo: ${{ steps.vars.outputs.repo_lowercase }}-${{ env.BRANCH_NAME }}
    #         server_container: ${{ steps.vars.outputs.server_container }}
    #         client_container: ${{ steps.vars.outputs.client_container }}
    #         image_tag: ${{ steps.vars.outputs.image_tag }}

    # run-test:
    #     needs: set-vars
    #     if: github.ref_name == 'test'
    #     uses: ./.github/workflows/deploy.yml
    #     secrets: inherit
    #     with:
    #         runner: mbp-13
    #         repo: ${{ needs.set-vars.outputs.repo }}
    #         server_container: ${{ needs.set-vars.outputs.server_container }}
    #         client_container: ${{ needs.set-vars.outputs.client_container }}
    #         image_tag: ${{ needs.set-vars.outputs.image_tag }}

    # run-main:
    #     needs: set-vars
    #     if: github.ref_name == 'main'
    #     uses: ./.github/workflows/deploy.yml
    #     secrets: inherit
    #     with:
    #         runner: mbp-13
    #         repo: ${{ needs.set-vars.outputs.repo }}
    #         server_container: ${{ needs.set-vars.outputs.server_container }}
    #         client_container: ${{ needs.set-vars.outputs.client_container }}
    #         image_tag: ${{ needs.set-vars.outputs.image_tag }}
