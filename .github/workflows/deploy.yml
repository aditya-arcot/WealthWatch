name: Deploy Client, Server, and Infrastructure

on:
    push:
        branches:
            - test
            - stage
            - main
        paths:
            - 'client/public/**'
            - 'client/src/**'
            - 'client/angular.json'
            - 'client/Dockerfile'
            - 'client/nginx.conf'
            - 'client/package-lock.json'
            - 'client/package.json'
            - 'client/tsconfig.json'
            - 'server/src/**'
            - 'server/Dockerfile'
            - 'server/package-lock.json'
            - 'server/package.json'
            - 'server/tsconfig.json'
            - 'docker-compose.yml'
            - 'wealthwatch*.conf'

jobs:
    runner:
        runs-on: ubuntu-latest
        outputs:
            runner: ${{ steps.set-runner.outputs.runner }}
        steps:
            - name: set runner
              id: set-runner
              run: |
                  if [ "${{ github.ref_name }}" = "test" ]; then
                      echo "runner=mbp-14" >> $GITHUB_OUTPUT
                  else
                      echo "runner=mbp-13" >> $GITHUB_OUTPUT
                  fi

    setup:
        runs-on: ubuntu-latest
        environment: ${{ github.ref_name == 'main' && 'prod' || github.ref_name }}
        outputs:
            repo: ${{ steps.outputs-vars.outputs.repo }}
            client_image: ${{ steps.outputs-vars.outputs.client_image }}
            client_container: ${{ steps.outputs-vars.outputs.client_container }}
            server_image: ${{ steps.outputs-vars.outputs.server_image }}
            server_container: ${{ steps.outputs-vars.outputs.server_container }}
        steps:
            - name: initial vars
              run: |
                  VERSION=${{ github.run_number }}-${{ github.run_attempt }}-${{ github.run_id }}
                  echo "REPO=$(echo ${{ github.event.repository.name }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
                  echo "IMAGE_TAG=$(date +%Y-%m-%d).$VERSION" >> $GITHUB_ENV

            - name: docker container names - non-prod
              if: github.ref_name != 'main'
              run: |
                  echo "CLIENT_CONTAINER=$REPO-${{ github.ref_name }}-client" >> $GITHUB_ENV
                  echo "SERVER_CONTAINER=$REPO-${{ github.ref_name }}-server" >> $GITHUB_ENV

            - name: docker container names - prod
              if: github.ref_name == 'main'
              run: |
                  echo "CLIENT_CONTAINER=$REPO-client" >> $GITHUB_ENV
                  echo "SERVER_CONTAINER=$REPO-server" >> $GITHUB_ENV

            - name: output vars
              id: outputs-vars
              run: |
                  echo "repo=$REPO" >> $GITHUB_OUTPUT
                  echo "client_image=$CLIENT_CONTAINER:$IMAGE_TAG" >> $GITHUB_OUTPUT
                  echo "client_container=$CLIENT_CONTAINER" >> $GITHUB_OUTPUT
                  echo "server_image=$SERVER_CONTAINER:$IMAGE_TAG" >> $GITHUB_OUTPUT
                  echo "server_container=$SERVER_CONTAINER" >> $GITHUB_OUTPUT

    deploy-client:
        needs: [runner, setup]
        uses: ./.github/workflows/deploy-client.yml
        with:
            runner: ${{ needs.runner.outputs.runner }}
            image: ${{ needs.setup.outputs.client_image }}
        secrets: inherit

    deploy-server:
        needs: [runner, setup]
        uses: ./.github/workflows/deploy-server.yml
        with:
            runner: ${{ needs.runner.outputs.runner }}
            image: ${{ needs.setup.outputs.server_image }}
        secrets: inherit

    deploy-infra:
        needs: [runner, setup, deploy-client, deploy-server]
        runs-on: ${{ needs.runner.outputs.runner }}
        environment: ${{ github.ref_name == 'main' && 'prod' || github.ref_name }}
        steps:
            - name: start docker
              env:
                  REPO: ${{ needs.setup.outputs.repo }}-${{ github.ref_name }}
                  SERVER_IMAGE: ${{ secrets.DOCKER_REGISTRY }}/${{ needs.setup.outputs.server_image }}
                  SERVER_PORT: ${{ vars.SERVER_PORT }}
                  WEBHOOK_PORT: ${{ vars.WEBHOOK_PORT }}
                  SERVER_CONTAINER: ${{ needs.setup.outputs.server_container }}
                  CLIENT_IMAGE: ${{ secrets.DOCKER_REGISTRY }}/${{ needs.setup.outputs.client_image }}
                  CLIENT_PORT: ${{ vars.CLIENT_PORT }}
                  CLIENT_CONTAINER: ${{ needs.setup.outputs.client_container }}
              run: docker compose up -d

            - name: configure nginx - stage
              if: github.ref_name == 'stage'
              run: |
                  sed -e "s/{SERVER_PORT}/${{ vars.SERVER_PORT }}/g" \
                  -e "s/{WEBHOOK_PORT}/${{ vars.WEBHOOK_PORT }}/g" \
                  -e "s/{CLIENT_PORT}/${{ vars.CLIENT_PORT }}/g" \
                  wealthwatch-stage.conf > wealthwatch-stage.conf.tmp
                  mv wealthwatch-stage.conf.tmp wealthwatch-stage.conf
                  cp wealthwatch-stage.conf /usr/local/etc/nginx/servers/

            - name: configure nginx - prod
              if: github.ref_name == 'main'
              run: |
                  sed -e "s/{SERVER_PORT}/${{ vars.SERVER_PORT }}/g" \
                  -e "s/{WEBHOOK_PORT}/${{ vars.WEBHOOK_PORT }}/g" \
                  -e "s/{CLIENT_PORT}/${{ vars.CLIENT_PORT }}/g" \
                  wealthwatch.conf > wealthwatch.conf.tmp
                  mv wealthwatch.conf.tmp wealthwatch.conf
                  cp wealthwatch.conf /usr/local/etc/nginx/servers/

            - name: test, restart nginx - stage, prod
              if: github.ref_name != 'test'
              run: |
                  nginx -t
                  brew services restart nginx
